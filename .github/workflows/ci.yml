name: Build and deploy to Github pages

on:
  pull_request:
  push:

env:
  DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1
    - uses: actions/cache@v1
      with:
        path: node_modules
        key: ${{ runner.os }}-${{ hashFiles('**/package-lock.json') }}
    - name: Use Node.js
      uses: actions/setup-node@v1
      with:
        node-version: 12.x
        registry-url: 'https://npm.pkg.github.com/'
        scope: '@mnsinri'
    - name: produce version info file
      run: 'echo {\"version\": \"${{ github.sha }}\"} > src/assets/version.json'
    - name: npm install, build, and test
      env:
        NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        npm install
        npm run build --if-present
    - name: upload artifact
      uses: actions/upload-artifact@v1
      with:
        name: dist
        path: dist
    - name: post status to Discord
      uses: sarisia/actions-status-discord@v1
      if: always()
      with:
        status: ${{ job.status }}
        job: build

  # deploy:
  #   name: deploy
  #   if: github.ref == 'refs/heads/master'
  #   needs: build
  #   runs-on: ubuntu-latest
  #   steps:
  #   - name: download artifact
  #     uses: actions/download-artifact@v1
  #     with:
  #       name: dist
  #   - name: deploy to github pages
  #     uses: peaceiris/actions-gh-pages@v2
  #     env:
  #       ACTIONS_DEPLOY_KEY: ${{ secrets.DEPLOY_SECRET }}
  #       EXTERNAL_REPOSITORY: aria-music/aria-music.github.io
  #       PUBLISH_BRANCH: master
  #       PUBLISH_DIR: ./dist
  #   - name: post status discord
  #     uses: sarisia/actions-status-discord@v1
  #     if: always()
  #     with:
  #       status: ${{ job.status }}
  #       job: deploy to gaiji.pro
